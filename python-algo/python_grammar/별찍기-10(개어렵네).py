# 문제분석

# 일단 이 문제는 별찍기라고 보면 안됨;;
# 이건 수학임 그냥
# 우선 이건 풀이가 도저히 떠오르지도 재귀로 어떻게 풀어야할지도 감이 오지 않았는데
# 일단 내가 생각한대로 한번 풀어보고자 한다.


# 일단 재귀로 풀라고 했으므로 재귀에는 기저조건이 존재하는데
# 일단 이 기저조건은 재귀를 탈출할 수 있는 최소조건을 의미한다
# 즉 어떤 시점에서 재귀가 무한히 돌지 않기 위해서 맞춰주어야 하는데
# 이 문제에서 패턴을 유추해본다면 가장 작은 별이 존재하고
# 그 별이 3 * 3형태로 이루어져 있다는 것이다
# 문제에서 N*N 형태로 이루어져 있는형태라고 했으므로
# 예제1에서 27이 주어졌을대 27 * 27 형태로 별이 생기는걸 알 수 있다

# 또한 조건에서 N은 3의 거듭제곱이라고 했으므로
# 2,4 같은 것들은 나올 수 가 없고
# 때문에 3의 거듭제곱이 N이라는건 3이라는 수를 얼마만큼 반복적으로 곱했을때 나올까 라는 질문이다
# 그럼 27이 나올려면 3^3 지수를 K라고 한다면 K =3 이어야 27을 만들 수 있다.

# 그렇다면 어짜피 27이외의 별출력은 필요 없으므로
# 재귀로 하나씩 만들어서 최종 27까지 리턴하면 되지 않을까 하는 생각이다.



# 첫번째로 3*3인 가장작은 형태에 도달하게 된다면
# 기저 조건에 의해서 3*3 형태의 별을 만든다.

# 그런다음 이 start(3)은 star(9)에서 호출하고 있으므로 9시점에서 3의 시점을 리턴하게 된다면

# 9를 만들때 3을 응용시킬 수 있다.

# 그렇게 되면 9는 3*2 이기 때문에 즉 3의 별 형태가 3*3개 있어야 한다는 얘기는 곧 가로 * 세로 둘다 9개의 줄이 형성 되어야 한다는 것이다.
# 그럼 9줄을 만들려면 각각의 줄을 3번씩 반복시켜버리면
# 만들어 질 수 있을거 같고


# 9에서 다 만든걸 27에서 9를 호출하고 있기 때문에
# 9에서 별이 완성된걸 27로 리턴해준다 
# 그렇게 된다면 27에서 9를 가지고 응용을 할 수 있고 그럼 27에서 9를 가지고 만들려면
# 9*3을 해야 27이 만들어지므로
# 9에서 했던것과 마찬가지로 3번씩 가로 세로 곱해서 만들어준다면 27의 형태를 띄는 별을 만들 수 있을 것 같다.



# 일단 재귀적으로 풀자고 했으니까 이 방법이 될거 같기도 하고
# 이왕 재귀를 연습하고 있으니까 이렇게 한번 풀어보는 것도 나쁘진 않을거 같은데
# 문제는 어떻게 반복 시킬건지인데...

import sys
input = sys.stdin.readline

n = int(input())


basic_star = ["***", "* *", "***"]

def makeStar(ar, n):
	arr = []
	for i in ar:
		arr.append(i * 3)

	for i in ar:
		arr.append(i + " "*(n//3)+ i)

	for i in ar:
		arr.append(i*3)

	return arr


def star(n):
	if n == 3:
		return basic_star
	else:
		div = n // 3
		r = star(div)
		# 여기서부터 하나씩 return 하게 될건데
		return makeStar(r, n)

result = star(n)

print("\n".join(result))
