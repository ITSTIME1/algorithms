
# 치킨 거리 자체가 집을 기준으로해서 치킨집과의 거리인데 그 거리들 중에서 가장 짧은 거리가 치킨거리
# 그런 제일 짧은 거리들의 합이 도시의 치킨거리

# 치킨집을 최대M개를고르고 나머지 치킨집은 폐업시킨다
# 도시의 치킨거리가 가장짧은거

# 최대 M개를 선택했을때 최대 M개가 골라지지 않을수 있찌
# 왜냐하면 집과 치킨집 사이의 가장 짧은 거리라는건
# 모든 집들을 기준으로 각 집마다 제일 짧은 거리의 치킨집은 중복될 수 있기 때문이지
# 그랬을떄 그 제일 짧은 치킨집들은 치킨거리가 되고
# 그러한 치킨집들을 M개 골랐을떄 최대 M개가 될 수도 있고 M개가 안될 수 있따(중복때문에)

# 그럼 결국 치킨집과의 거리가 가장 짧은것들이 어떤 좌표들인지를 알아야하고
# 그 제일 짧은거리가 치킨거리니까
# 그 치킨거리들을 m개 뽑아봤을때
# 만약 5개 뽑는다면 5개에 해당하는 좌표를 가진 거리들 중 가장 짧은걸 더하면 그게 답.


# 그럼 치킨집들과 집과의 거리중 가장짧은걸 찾고 = 치킨거리
# 그 치킨거리들 중 가장 짧은것만 누적합해주면 = M개 선택했을때 가장 짧은것들만 고르니까 몇개를 선택햇을때
# 가장짧은 값이 나오는지 알 수 있찌 M개를 고르는건 치킨집을 고르게되는거고
# 그렇게 고른 치킨집들 중에서 집들과의 거리가 가장 짧은것이 치킨거리니까 그 치킨거리들의 합이 곧 도시의 치킨거리가 되는거지 M개를 선택했을때의

import sys 
from itertools import combinations
input = sys.stdin.readline

n, m = map(int, input().split())

board=[input().split() for _ in range(n)]
ch = []
home = []
for i in range(n):
	for j in range(n):
		if board[i][j] == "2":
			ch.append([i, j])
		elif board[i][j] == "1":
			home.append([i, j])

# 치킨집 중에서 최대M개를 선택했을대
t = []
while m > 0:
	for i in combinations(ch, m):
		print(i)
		# M개를 선택할 수도 있고 m개보다 적게 선택할 수도 있고
		# 선택한 치킨집들과의 모든 집들의 거리들중 그럼 선택되어진 치킨집들과 집과의 거리중 가장짧은걸 택하면되는거지
		# 선택된 치킨좌표와 집들과의거리

		# 즉 각 치킨집들 과 집과의 거리를 구하기 때문에
		# ㄱ치킨집들을 선별해서
		a = []
		for j in home:
			stand = 100
			for c in i:
				dist = min(stand, abs(j[0]-c[0]) + abs(j[1]-c[1]))
				stand = dist
			# 그렇게 구해진 가장 작은 dist거리를 넣어주게 되면 최대 고를 수 있는 M개를 모두 선택한 것이 되기 때문에
			a.append(stand)
		if a:
			t.append(sum(a))
	m-=1
print(min(t))