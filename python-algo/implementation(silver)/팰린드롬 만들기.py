import sys
input = sys.stdin.readline


# 하나의 문자가 존재하지만 문자의 가운데에 있어야된다는거
# ABCD는 팰린드롬을 만들 수 없다
# 팰린드롬이라는건 앞으로 읽어도 똑같은 문자열이고
# 뒤로 읽어도 똑같은 문자열을 의미하는데
# ABCD는 만들 수 없다 왜 ?
# 홀수개인 문자를 제외하고 나머지 문자들이 전부 짝수개로 존재한다면
# 대칭을 만들 수 있다는 얘기인데
# 근데 ABCD같은 경우는 홀수인 문자가 문장 전체에서 4개의 각 문자들이 전부 홀수기때문에
# 이말인 즉 모든 문자가 짝수개이고 홀수개인 문자가 하나일때를 의미한다.
# 그렇다는건 전체 문장에서 홀수인 문자는 한개여야만 한다는것.


# AAABB 같은 경우도
# 전체 문자는 총 2개 A,B지만
# B의 개수는 짝수개이며, A의 개수는 홀수개이기 때문에
# 위조건에 부합한다.


# ABACABA도 마찬가지로
# a,b,c가 존재하지만
# A,B는 짝수개이고 C는 홀수개이다.
# 따라서 문자 전체에서 홀수는 하나뿐이다.

# 그럼 이제 어떻게 바꿔야 할까 어떤 기준으로
# 팰린드롬을 만들기 위한 규칙이 존재할거아니야

# 한문자를 중심으로 대칭으로 맞아떨어진다는것.
# 홀수개일경우 가운데 문자를 중심으로 대칭을 이루고 있지
# AAABB 같은 경우 어떻게 해야 팰린드롬을 만들 수 있을까



# 일단
# 두개씩 검사를해
# 그래서 서로 다른 문자면 서로 위치를 바꿔
# 이렇게 끝까지 한번 돈다음에 두칸씩 검사해서
# 서로같은 문자가 아닌지 검사해
# 그렇게 해서 짝수라면 문자열의 절반만큼의 개수가 전부 다른 문자여야하고
# 홀수 같은 경우 문자열의 // 2 + 나머지 만큼의 개수가 다른 문자여야하는것
# 위 두가지 경우가 팰린드롬의 판단기준이되고

# 팰린드롬이 여러가지 경우가 있는데
# 만약 팰린드롬이 여러가지 라면 중앙을 기점으로
# 왼쪽은 오름차순 정렬
# 오른쪽은 내림차순정렬을 통해서
# 마지막에 합쳐 
# 그러면 돼


string = list(input().strip())

# 정렬을 수행해주어야하니까
string.sort()
dic = {}
cnt = 0
for i in string:
	if i not in dic:
		dic[i] = 1
	else:
		dic[i] += 1

for key, value in dic.items():
	if value % 2 != 0:
		cnt += 1

if cnt >= 2:
	print("\"I'm Sorry Hansoo\"")
else:
	center = ""
	for i in string:
		if dic[i] % 2 != 0:
			center = i
			string.remove(i)
	res = ""
	for i in range(0, len(string), 2):
		res += string[i]

	print(res+center+res[::-1])


	



