# 문제 분석
# 생각을 바꿔보자 

# 이게 회원들이 n명이 있는데
# 이 회원들이 시킨 치킨이 m개의 종류가 있고 각각의 선호도가 달라

# 각각의 회원들이 뽑은 만족도가 최대인거

# 5C3개를 뽑는 가지수를 내고
# 그 뽑는 가지수가 나왔으니
# 그 뽑는 가지수를 적용해서
# 회원들에게 다 적용한다음
# 각각의 경우의 수에 대해서
# 가장 큰 값만 선택해서
# 더해준다면
# 그게 가장 큰 값이 되지 않을까
# 풀이를 봤는데 진짜 생각 하는게 너무 어렵다 이런건

# 이 문제를 풀 때 생각하지 못했던 점
# 1. 조합은 생각했는데 모든 경우의 수의 조합을 생각하진 않았따
# 그저 배열의 값들을 더했을때 가장 큰 값만이 그건줄 알았는데
# 사실 이것도 틀린건 아닌거 같은데 문제는 3개씩만 고르려고 했던게 문제이다
# 종류중에서 3개를 고르는건 회원이 시킨 치킨종류에서 3개를 골라야 하는데
# 내가 생각했던건 회원들중에서 3개를 뽑는 경우를 생각했기에 여기서 헷갈려서
# 문제 초점을 잘 맞추지 못했따
# 이건 진자.. 문제 잘 읽고 생각하는 방법을 더 키워야 겠다..
from itertools import combinations

N, M = map(int, input().split())

num = [list(map(int, input().split())) for _ in range(N)]

pre = 0
for i in combinations(range(M), 3):
	p = 0
	for j in range(N):
		# 회원당 가장 큰 선호도를 가진 값을 뽑고
		p += max(num[j][i[0]], num[j][i[1]], num[j][i[2]])
	# 선호도 값중에서 가장 큰 값을 고르고
	# 그 합을 저장해서
	# 가장 큰 값만 남도록 pre 변수에 저장시키고
	if pre <= p:
		pre = p
print(pre)
	