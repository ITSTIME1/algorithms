
# 애너 그램이라는것이
# 철자의 순서를 뒤바꾸어 같아 질 수 있을때를 의미하는것이니까
# 철자들의 개수가 같으면
# 순서를 바꾸어도 당연히 순서를 바꾼 단어를 만들 수 있지만
# 철자가 하나라도 다르다면 만들 수 없기 때문에
# 하나 이상이라면 제거를 해야 되는 상황이지
# 그랬을때 제거를 해야되는 단어의 개수가 몇개냐를 물어보는건데
# 제거하는 위치는 아무거나 가능하다라는 조건이 있다.
# 그럼 일단 제거를 하면서 확인을 해봐야 한다는건데

# 몇개의 문자를 지워야 하는가.
# 음
# 틀린 문자의 개수의 2배?
# a를 x로 바꾸거나 x를 a로 바꾸거나
import sys
input = sys.stdin.readline


first = list(input().strip())
second = list(input().strip())

# 두 문자열에 존재하는 공통알파벳을 제거하고
# 남은 것들의 합
# 만큼 변경하면 되니까
# 공통문자열은 변경하지 않아도되고
# 공통문자열이 아닌ㄴ걸 제거하는거니까
# 공통문자열이 아닌걸 제거하기 위해서
# 공통이 되지 않는 문자열을 찾는다.

cnt = 0
index = 0
while index < len(first):
	# 한 문자열을 가지고 나머지 문자열을 검사하는 방법으로
	# 만약 한 문자열의 문자가 다른 문자열의 문자로 있다는 것은
	# 두 문자가 공통된 문자를 가지고 있다는 것이 되기 때문에
	# 공통된 문자가 아닌것의 cnt를 구하면되지 않을까
	if first[index] in second:
		del first[index]
		del second[index]
		index -= 1
	# 공통된 단어가 아니라면 index를 올린다.
	# 왜냐하면 첫번째 index에 있는 단어는 더 이상 공통된 단어가 아니기 때문에
	# 백날 검사해봐도 공통된 단어가 아니라는게 된다.
	index += 1
	# 처음 index = 0이었다가 올려지게 되므로
	# 다음에 가르킬 index = 1이 되고 앞으로 당겨진 것들에 대해서는 검사를 안하게 되므로
	# index를 하나 감소시켜서 index를 내린다음에
	# 그럼 -1이 되고 index + 1올려 처음을 가르키게 된다.
	# 

# 공통된 문자열을 두 문자열에서 제거하게 된다면
# 서로 공통되지 않은 문자열들만 남게 되니까
# 어짜피 애너그램을 만들때는 공통된 문자열은 변경할 필요가 없다.
# 또한 서로 단어의 개수가 전부 겹친다면 그것또한 할 필요가 없다.
# 하지만 애너그램을 만들 수 없는 조건은 단어가 완전히 일치하지 않는 경우기 때문에
# 그렇다는건 서로의 단어에 겹치지 않는 단어가 있다는거고
# 그 겹치지 않는 단어를 바꾸었을때 서로가 같게 되니까
# 예제에서도 두 단어모두 다른 단어를 바꾸었기 때문에
# 서로 겹치는 단어만 빼고 서로 겹치지 않는 단어들만 남겨
# 그 단어들을 제거하게 되면 겹치는 부분만 남게 되므로 애너그램이 된다.
# 따라서 겹치는 부분만 제거하면 겹치지 않은 부분들이 서로의 문자열에 남게되니까
# 둘의 합만큼만 변경하게 되면 애너그램을 만ㄷ르 수 있다.
print(len(first) + len(second))





# occurs
# succor