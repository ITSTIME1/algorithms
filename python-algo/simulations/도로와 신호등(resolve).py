# 문제분석


# 처음 도로에 진입했을때
# 모든 신호등의 색상은 빨간색이다
# 1초에 1미터를 움직인다고 했을때
# 신호딩으 ㅂ빨간색인경우 그자리에서 멈추고
# 초록색으로 바뀔때 깢 기다린다

# 상근이가 도로의 끝까지 이동하는데 걸리는 시간을 구해라
# 도로의 시작은 0미터 이고 끝은 L미터이다

# 신호등의 개수는 2개
# 도로의 길이는 10이다

# 너무 말이안되는데 
# 아 D가 L을 포함하지 않는다는건
# 마지막 위치엔 신호등이 없다라는걸 의미하네
# 주기 = 사이클 
# 일정한 시간마다 같은 현상이 반복되는 것을 말함
# 즉 빨간불이었다가 파란불로 벼하고
# 파란불이었다고 빨간불로 변하는 이런 현상은
# 하나의 사이클이라고 한다

# 0 - 1 R
# 1 - 2 R
# 2 - 3 R
# 3만큼 가고 빨은 총 4 3 2 이 되었음
# 3 + 2 = 5
# 3 - 4 = R
# 4 - 5 = R
 

N, L = map(int, input().split())

time = 0 
pos = 0
for _ in range(N):
	d, r, g = map(int, input().split())
	# 현재위치에서 간 거리 만큼 1m 를 1초라고 생각하고
	# time 에 더해주고
	time += d - pos
	pos = d
	# 현재 시간을 한 사이클로 나눠주었을때 나오는 나머지는
	# 해당 시간만큼 소요 한 걸 말하는거고
	# 그 소요한 시간이 빨간불을 기다려야하는 시간보다 적을ㄸ
	# 크다면 이미 초록불이라는거기 떄문에
	# 빨간불일대 만큼 기다려야 하는 시간을 구해야 하므로
	# 해당 주기의 나머지가 빨간불보다 작게 된다면
	# 그리고 같을때 또한 바뀌는 시점이기 떄문에
	# 0으로 상쇄되어 가능
	# 그니까 내 시간이 어떤 주기에 포함되어 있냐는거임
	# 주기 = 사이클이 같다고
	if time % (r+g) <= r:
		time += r - (time % (r+g))

if pos != L:
	time += L-pos

print(time)


# 이 문제를 처음에 단번에 떠올리지 못했던 이유가
# 단순하게 해당 거리만큼 가고 난뒤
# 빨간불의 시간에서 내가 달려온 시간만큼 빼준게 기다려야 하는 시간인데
# 그 시간을 더하다보니 r - 달려온 시간만큼 빼게되면
# 음수가 나오게 되는데
# 여기서 첫번째로 사고가 막혔다
# 하지만 여기서 사이클 = 주기를 기억하고

# 사이클이란건 다시 반복되게 ㅚ었을대를 한주기라고 했을대
# 만약 10 이라는 게 한 주기라면
# 빨간불과 초록불의 한 주기는 10이라는 말이고
# 내가 달려온 시간을 주기 = 1/f 역함수기때문에
# 내가 달려온 시간을 주기로 나눴을대
# 나오는 나머지가
# 현재 내가 속한 곳이 어디인지 알려주고
# 그럼 그 값이 빨간불인지 파란불의 속해있는지에 따라서
# 빨깐불만큼 더해야할지 아님 초록불이면 그냥 더하지 말아야할지ㄱ
# 결정된다
# 때문에 첫 예제처럼 두번째 예제까지 오는데 총 7초가 소용되고
# 이때 주기를 구해보면 3이라는게 나오는데
# 빨간불은 2초가 끝이기 때문에
# 남은 1초가 더 해졌다는건 이미 초록불의 시간이라는 것이기 때문에
# 더하지 않는다
# 그리고 L 에는 신호등이 없기 때문에
# 현재 위치가 최종길이가 아니라면 목표거리 까지 더해준다면 쉽게 풀 수 있는 문제였지만


# 생각하기 까다로웠던게
# 내가 달려온 시간만큼 주기를 나눴을대
# 의 생각을 하는게 어려웠다 아마 이 문제는 이 걸 생각해내라고 했던 문제같은데
# 결국엔 생각을 하지 못했다
# 하지만 이 비슷한 주기 문제가 나온다면
# 몫 : 주기를 뜻하기 나머지는 현재 어디까지 진행되었는지 알 수 있는 위치가 된다
# 그렇기 때문에 응용한다면 풀 수 있으맂도 모르겠다


