import java.io.*;
import java.util.*;

class 비슷한단어_ReWrite {
    public static BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
    public static void main(String[] args) throws IOException{
        int N = Integer.parseInt(br.readLine());
        
        

    }
}

// / 다시 한번 잘 생각해보자.
        // 숌하게 바뀐 문자라면 map에 저장을 시킬 수 있어
        // 그럼 숌하게 바뀐다라고 하는것은 B단어에 있는 알파벳으로 바꾸겠다는 의미가 될거고
        // 숌하게 바꾸는게 가능하기 위해서는 B단어에 해당하는 알파벳이, A에 있는 어떤 단어랑도 숌하게 바뀐적이 없어야해 즉 짝이 이루어지면 안된다는거지
        // 그러므로, 만약에 A라는 단어가 숌하게 바뀐 이력이 없다면, map에 포함이 되어 있지 않을거고, 그럴때는 숌하게 바뀔 수 있는지 확인하기 위해서
        // B단어가 쌍을 맺은 적이 있는지를 확인해줘, 만약 쌍을 맺은 적이 없다면, 해당 단어로 짝이 이루어질 수 있고 숌하게 변경이 가능하다는게 되니까
        // Map에다가는, 해당 단어를 넣어주는거지.



        // // 그럼 만약에 A가 가리키는 단어가 숌하게 바뀐 이력이 있다면, 해당 단어가 숌하게 바뀐 이력이 있다는건, 어떤 단어로 치환이 가능했다라는 의미가 되고
        // 원본 문자열을 검사하기 위해서 직접 원본문자열을 건들지는 않았지만, 만약 변경을 모두 했다고 가정한다면, 그 문자는 치환된 문자로 생각을 해야 함.
        // 그랬을때, 치환된 문자가 현재 B단어의 문자와 같다면 숌하게 바뀐 뒤에도, B단어와 같은 문자라는걸 보장하지만, 숌하게 바뀐뒤에도, 현재 B단어중에 가리키는 문자와 다른 문자라면
        // 치환된 문자여도, B단어를 만들 수 없다라는 의미가 된다. 그러므로, 이런 경우는 숌하게 모두 바꾼 처리를 했다고 하더라도
        // 최종적으로 만들어진 치환된 문자열은 B단어와 같지 않기 때문에, 결국 숌하게 바뀌었다면 -> B단어를 만족하지 못함.

        // 그래서 숌하게 바꿔서 B단어를 만들 수 있다면 -> 그 단어는 비슷한 단어다.
        // 이걸 대우로 해석해보면, 그 단어가 비슷한 단어가 아니라면, 숌하게 바꿨을때 B단어를 만들 수 없다. 라는 의미가 된다.
        // 그러므로 숌하게 바꿧을때 B단어가 되려면, B단어 전체와 같아야 한다라는 것을 알 수 있고
        // 숌하게 모두 변경을 했는데도 불구하고, B단어 전체와 하나라도 같지 않다면, 숌하게 바꿨더라도 B단어를 만족하지 못한다는 얘기가 된다.

        // 따라서 숌하게 바뀐이력이 있는지 없는지를 따지는게 우선
            // 1. 숌하게 바뀐 이력이 없다면 
                // 1-1) B단어가 A단어와 짝을 짓지 않았다면, A단어를 현재 가리키고 있는 단어로 map에 넣어줌
                // 1-2) B단어가 A단어와 짝을 이루었다면, map에 넣을 수 없게 되고, 숌하게 바뀐 이력도 없는데, 바꾸지도 못하므로, 숌하게 처리를 다 하고서도, 이 단어는 B단어 전체와도 같지x 않기 때문에 break
                

            
            
            // 2. 숌하게 바뀐 이력이 있다면
                // 2-1) B가 가리키는 단어와 같은 단어로 치환된거라면, 숌하게 바꾸고 나서 가리키고 있는 단어로 치환된 거기 떄문에, B단어와도 같게 됨
                // 2-2) B가 가리키는  단어와 같은 단어로 치환된게 아니라면, 숌하게 바꾸고 나서도 가리키고 있는 단어로 치환된게 아니기 때문에, B단어를 만들어도, B단어와는 다른 단어가됨.