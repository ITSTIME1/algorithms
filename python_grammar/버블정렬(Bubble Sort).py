# 버블 정렬 O(n2)
# 정렬할 수를 비교해서 나가는데 성능은 좋지 않음

# 인접한 두수를 가지고 오는데
# 앞에서부터 시작해서 큰 수를 뒤로 보내 리스트 혹은 배열에서 가장 뒤에 있는 값이
# 가장 큰 값을 가지게 만든다.

array = [8,4,6,2,9,1,3,7,5]

def bubble_sort(array):
  # 배열의 길이를 받아오고 위 array
  # 배열의 경우 9개 이므로 n = 9
  # 항상 배열을 탐색할려면 길이의 -1 만큼 반복해서 검사 해야 index 문제가 안생김
  # n - 1 을 해야 되는 이유는
  # 배열(리스트) index = 0부터 시작흐모
  # 0,1,2,3,4,5,6,7,8 이 된다. 길이만큼 돌되 인덱스 에서는 그 길이가 0부터 시작된다는 뜻이다.
  n = len(array)
  for i in range(n - 1):
    for j in range(n - i - 1):
      # j 는 n의 길이에서 -1 하나 더 뺀 수
      # 즉 9 - 0 - 1 = 8
      if array[j] > array[j + 1]:
                array[j], array[j + 1] = array[j + 1], array[j]
    